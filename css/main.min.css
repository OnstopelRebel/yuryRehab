@font-face{font-style:normal;font-weight:400;font-family:"Montserrat";font-display:swap;src:url(../fonts/montserrat-400.woff2) format("woff2"),url(../fonts/montserrat-400.woff) format("woff")}@font-face{font-style:normal;font-weight:500;font-family:"Montserrat";font-display:swap;src:url(../fonts/montserrat-500.woff2) format("woff2"),url(../fonts/montserrat-500.woff) format("woff")}@font-face{font-style:normal;font-weight:700;font-family:"Montserrat";font-display:swap;src:url(../fonts/montserrat-700.woff2) format("woff2"),url(../fonts/montserrat-700.woff) format("woff")}@font-face{font-style:normal;font-weight:400;font-family:"Nunito";font-display:swap;src:url(../fonts/nunito-400.woff2) format("woff2"),url(../fonts/nunito-400.woff) format("woff")}@font-face{font-style:normal;font-weight:500;font-family:"Nunito";font-display:swap;src:url(../fonts/nunito-500.woff2) format("woff2"),url(../fonts/nunito-500.woff) format("woff")}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{margin:0;padding:0;min-height:100vh}body{width:100%;height:100%}a{text-decoration:none}img,video{display:block;max-width:100%;height:auto}textarea{resize:none}input,select,textarea{border-radius:0}input::-webkit-input-placeholder,textarea::-webkit-input-placeholder{opacity:1}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1}input:-ms-input-placeholder,textarea:-ms-input-placeholder{opacity:1}input::-ms-input-placeholder,textarea::-ms-input-placeholder{opacity:1}input::placeholder,textarea::placeholder{opacity:1}input:invalid,textarea:invalid{-webkit-box-shadow:none;box-shadow:none}input::-ms-clear,input::-ms-reveal{display:none}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;appearance:none}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{margin:0;-webkit-appearance:none;appearance:none}input[type=number]{-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}input:matches([type=email],[type=number],[type=password],[type=search],[type=tel],[type=text],[type=url]),select,textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:none;-moz-appearance:none;appearance:none}ul{list-style:none;margin:0;padding:0}:root{font-size:calc(.5em + 1vw)}footer,header{-ms-flex-negative:0;flex-shrink:0}footer{margin-top:auto}main{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;border:0;clip:rect(0 0 0 0);overflow:hidden}.container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;max-height:100vh}.accordion-body{padding-top:50px;padding-bottom:50px}.accordion-button{padding:.5em .75em}.accordion-item:last-of-type .accordion-button.collapsed{border-bottom-right-radius:0;border-bottom-left-radius:0}.certificate{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(4,auto);gap:15px;margin:0 auto}.certificate--special{grid-template-rows:repeat(5,auto);padding-bottom:50px}.certificate--full{grid-column:1/3}.certificate--double .certificate__text{grid-column:1/2;grid-row:2/4}.certificate__title{grid-column:1/3;grid-row:1/2}.certificate__text{grid-column:1/3;grid-row:2/3}.certificate__img-container{-ms-flex-item-align:center;align-self:center;justify-self:center}.certificate__img-container--double-1{grid-column:2/3;grid-row:2/3;justify-self:center}.certificate__img-container--double-2{grid-column:2/3;grid-row:3/4;justify-self:center}.certificate__img-container--single{grid-column:1/3;grid-row:3/4}.certificate__img-container--eso{grid-column:2/3;grid-row:3/4;align-self:end;justify-self:start}.certificate__img-container--princess{grid-column:2/3;grid-row:4/5;align-self:start;justify-self:start}.certificate__img-container--diploma{grid-column:1/2;grid-row:3/5;justify-self:end;position:relative;width:100%;max-width:430px;height:100%}.certificate__img-container--vertical{max-width:176px}.certificate__img{-webkit-box-shadow:0 4px 24px rgba(0,0,0,.05);box-shadow:0 4px 24px rgba(0,0,0,.05);border:1px solid rgba(0,0,0,.08)}.certificate__img--diploma{position:absolute;top:0;left:0;-o-object-fit:cover;object-fit:cover;width:100%;height:100%}.telegram__link:hover{color:#fff;-webkit-box-shadow:inset 0 0 30px 20px rgba(0,136,204,.7);box-shadow:inset 0 0 30px 20px rgba(0,136,204,.7);opacity:.95}.telegram__link:active{-webkit-box-shadow:inset 0 0 0 2px #08c;box-shadow:inset 0 0 0 2px #08c;opacity:.6}.expertise{padding:20px 0}.expertise__accordion{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%}.expertise__wrapper{display:grid;grid-template-columns:repeat(2,1fr);gap:20px;margin:0 auto}.header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:.75em 0}.header__avatar{padding:10px 0}.header__img{-o-object-fit:cover;object-fit:cover;width:180px;height:180px;border-radius:50%}.header__title{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:1em 0 .75em}.header__name{font:700 1.563rem/1.3rem "Montserrat","Arial",sans-serif;color:#5c5c5c}.header__description{font:500 .8rem/1.3rem "Montserrat","Arial",sans-serif;color:#5c5c5c}.block{padding:1.5em;border:1px solid rgba(0,0,0,.08);border-radius:25px;-webkit-box-shadow:0 4px 24px rgba(0,0,0,.05);box-shadow:0 4px 24px rgba(0,0,0,.05)}.text{font:400 .65rem/calc(.65rem + 20%) "Nunito","Arial",sans-serif;color:#5c5c5c}.text__justify{text-align:justify}.title{font:500 1.25rem/1.3rem "Montserrat","Arial",sans-serif;color:#5c5c5c}.title__small{font:700 .64rem/1.3rem "Montserrat","Arial",sans-serif;color:#5c5c5c}.patient,.services{padding:20px 0}.social,.social__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.social{padding:25px;margin:0 auto}.social__list{gap:12px;padding:25px 25px 30px;border-radius:25px;-webkit-transition:all 400ms ease-out;-o-transition:all 400ms ease-out;transition:all 400ms ease-out}.social__list:hover{-webkit-box-shadow:0 4px 24px rgba(0,0,0,.05);box-shadow:0 4px 24px rgba(0,0,0,.05)}.social__icon{fill:rgba(71,74,79,.7);-webkit-transition:all 200ms ease-out;-o-transition:all 200ms ease-out;transition:all 200ms ease-out}.social__icon:hover{fill:rgba(71,74,79,.9);-webkit-transform:scale(1.3);-ms-transform:scale(1.3);transform:scale(1.3)}.specialisation__block{padding:2em}.specialisation__img{padding:1.5em 0 1.5em 1.5em}.specialisation__img--one{float:right}.specialisation__img--two{float:left;padding-left:0;padding-right:1.5em}.symptom-card{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(2,auto);grid-row-gap:20px}.symptom-card:not(:last-of-type),.symptom-card__item:not(:last-of-type){margin-bottom:10px}.symptom-card__title{grid-column:1/2}.symptom-card__img-container{grid-column:1/2;align-self:center}.symptom-card__list{grid-column:2/3;list-style:disc;justify-self:center}.telegram{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%}.telegram__link{font:500 .64rem/1.3rem "Montserrat","Arial",sans-serif;background:#61a8de;position:relative;color:#fff;display:block;padding:1em;width:100%;text-align:center;text-transform:uppercase;border-radius:5px;-webkit-transition:all .3s ease-in-out;-o-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.telegram__icon{display:inline-block;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}@media (max-width:767px){.container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-height:-webkit-fit-content;min-height:-moz-fit-content;min-height:fit-content;max-width:100%}.accordion-body{padding:1em 0}.accordion-button{padding:1.25em 1.5em}.accordion-item:last-of-type .accordion-button.collapsed{border-bottom-right-radius:0;border-bottom-left-radius:0}.certificate{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(4,auto);gap:15px;margin:0 auto;grid-column:1/2}.certificate--double .certificate__text{grid-column:1/3;grid-row:2/3}.certificate__title{grid-column:1/3;grid-row:1/2}.certificate__text{grid-column:1/3;grid-row:2/3;margin:0}.certificate__img-container{-ms-flex-item-align:center;align-self:center;justify-self:center}.certificate__img-container:not(.certificate--special>.certificate__img-container){max-width:130px}.certificate__img-container--double-1{grid-column:1/2;grid-row:3/4;justify-self:center}.certificate__img-container--double-2{grid-column:2/3;grid-row:3/4;justify-self:center}.certificate__img-container--single{grid-column:1/3;grid-row:3/4}.certificate__img-container--eso{grid-column:2/3;grid-row:3/4;align-self:end;justify-self:start}.certificate__img-container--princess{grid-column:2/3;grid-row:4/5;align-self:start;justify-self:start}.certificate__img-container--diploma{grid-column:1/2;grid-row:3/5;justify-self:end;position:relative;width:100%;max-width:430px;height:100%}.certificate__img{-webkit-box-shadow:0 4px 24px rgba(0,0,0,.05);box-shadow:0 4px 24px rgba(0,0,0,.05);border:1px solid rgba(0,0,0,.08)}.certificate__img--diploma{position:absolute;top:0;left:0;-o-object-fit:cover;object-fit:cover;width:100%;height:100%}.expertise{padding:0}.expertise__accordion{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%}.expertise__wrapper{display:grid;grid-template-columns:1fr;gap:20px;margin:0 auto}.header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:.25em 0 1em}.header__avatar{padding:.5em 0}.header__img{-o-object-fit:cover;object-fit:cover;width:11em;height:11em;border-radius:50%}.header__title{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:.5em 0}.header__description,.header__name{font-family:"Montserrat","Arial",sans-serif;font-weight:700;font-style:normal;font-size:1.728rem;line-height:1.3rem;color:#5c5c5c}.header__description{font-weight:500;font-size:.833rem}.block{padding:1em}.text{font-family:"Nunito","Arial",sans-serif;font-weight:400;font-style:normal;font-size:.85rem;line-height:calc(.85rem + 20%);color:#5c5c5c}.text__justify{text-align:justify}.title,.title__small{font-family:"Montserrat","Arial",sans-serif;font-weight:500;font-style:normal;font-size:1.2rem;line-height:1.3rem;color:#5c5c5c}.title__small{font-weight:700;font-size:.694rem}.telegram{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%}.telegram__link{position:relative;font-family:"Montserrat","Arial",sans-serif;font-weight:500;font-style:normal;font-size:.694rem;line-height:1.3rem;color:#fff;display:block;padding:1em;width:100%;text-align:center;background-color:#61a8de;text-transform:uppercase;border-radius:5px}.telegram__icon{display:inline-block;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.social{padding-top:0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */